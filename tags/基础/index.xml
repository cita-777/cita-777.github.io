<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>基础 on cita的博客__</title>
        <link>http://localhost:1313/tags/%E5%9F%BA%E7%A1%80/</link>
        <description>Recent content in 基础 on cita的博客__</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>cita</copyright>
        <lastBuildDate>Fri, 29 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>PCB设计与立创EDA使用备忘录</title>
        <link>http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/</link>
        <pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
        <description>&lt;img src="http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/background.jpg" alt="Featured image of post PCB设计与立创EDA使用备忘录" /&gt;&lt;p&gt;本篇课程基于B站UP主&lt;code&gt;Expert电子实验室&lt;/code&gt;的教学视频，同时加上本人思考与总结汇总而成。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1At421h7Ui/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;amp;vd_source=c33a47a3f08b3b6b6c1614d37f34903f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;零基础入门PCB设计保姆级教学&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/346179450&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Expert电子实验室&lt;/a&gt;&lt;/p&gt;
&lt;iframe src=&#34;https://player.bilibili.com/player.html?isOutside=true&amp;amp;aid=1800822510&amp;amp;bvid=BV1At421h7Ui&amp;amp;cid=1445021959&amp;amp;p=1&#34; scrolling=&#34;no&#34; border=&#34;0&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34; style=&#34;scrollbar-width: thin; scrollbar-color: var(--scrollbar-color) transparent; box-sizing: border-box; margin: 0px 0px 20px; color: rgb(76, 73, 72); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Lato, Roboto, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, sans-serif; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;本部分笔记为扫盲篇（基础篇）&lt;/p&gt;
&lt;h2 id=&#34;1-电路设计&#34;&gt;&lt;a href=&#34;#1-%e7%94%b5%e8%b7%af%e8%ae%be%e8%ae%a1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1. 电路设计
&lt;/h2&gt;&lt;h2 id=&#34;11-原理图四要素&#34;&gt;&lt;a href=&#34;#11-%e5%8e%9f%e7%90%86%e5%9b%be%e5%9b%9b%e8%a6%81%e7%b4%a0&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.1 原理图四要素
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;元件符号&lt;/li&gt;
&lt;li&gt;连接线&lt;/li&gt;
&lt;li&gt;结点&lt;/li&gt;
&lt;li&gt;注释&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;12-基本原件介绍&#34;&gt;&lt;a href=&#34;#12-%e5%9f%ba%e6%9c%ac%e5%8e%9f%e4%bb%b6%e4%bb%8b%e7%bb%8d&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2 基本原件介绍
&lt;/h2&gt;&lt;h3 id=&#34;121-电阻&#34;&gt;&lt;a href=&#34;#121-%e7%94%b5%e9%98%bb&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.1 电阻
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于贴片电阻的读数&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;1）3位读数：前2位为有效数字，第3位表示10的n次幂(也可以理解为0的个数)。精度为±5%&lt;/p&gt;
&lt;p&gt;2）4位读数：前3位为有效数字，第4位表示10的n次幂(也可以理解为0的个数)。读法和3位的原理一样，精度为±1%&lt;/p&gt;
&lt;p&gt;3）阻值小于10的读数：通常在两个数之间插入一个字母R，用字母R来代替小数点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;122-电容&#34;&gt;&lt;a href=&#34;#122-%e7%94%b5%e5%ae%b9&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.2 电容
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主要功能：&lt;strong&gt;储能和滤波&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;单位计算&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1uF=1000nF；1nF=1000pF
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/6.png&#34;
	width=&#34;1252&#34;
	height=&#34;656&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/6_hu11177614856177748304.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/6_hu219592418567601453.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;458px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读数以及含义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%872.png&#34;
	width=&#34;640&#34;
	height=&#34;271&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%872_hu8284289557589686322.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%872_hu1304599536010297078.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;566px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%873.png&#34;
	width=&#34;640&#34;
	height=&#34;365&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%873_hu5744861166743414919.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%873_hu8919924115267769037.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;420px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%874.png&#34;
	width=&#34;640&#34;
	height=&#34;301&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%874_hu7292073434556720172.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%874_hu1357148087267962453.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;510px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%875.png&#34;
	width=&#34;640&#34;
	height=&#34;307&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%875_hu13510441971270726016.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%875_hu14587521691220625244.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;208&#34;
		data-flex-basis=&#34;500px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;123-电感&#34;&gt;&lt;a href=&#34;#123-%e7%94%b5%e6%84%9f&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.3 电感
&lt;/h3&gt;&lt;p&gt;Inductor，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单位换算&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1H=1000mH；1mH=1000uH；
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;主要功能：滤波，扼流，谐振，储能&lt;/li&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/6.png&#34;
	width=&#34;1252&#34;
	height=&#34;656&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/6_hu11177614856177748304.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/6_hu219592418567601453.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;190&#34;
		data-flex-basis=&#34;458px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读数以及含义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/7.png&#34;
	width=&#34;1285&#34;
	height=&#34;754&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/7_hu17707074838298918213.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/7_hu13746448816796052689.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;170&#34;
		data-flex-basis=&#34;409px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/8.png&#34;
	width=&#34;1244&#34;
	height=&#34;1052&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/8_hu3365582610749994174.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/8_hu11096317691556359452.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;118&#34;
		data-flex-basis=&#34;283px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;124-二极管&#34;&gt;&lt;a href=&#34;#124-%e4%ba%8c%e6%9e%81%e7%ae%a1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.4 二极管
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主要功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现对交流电整流、对调制信号检波、限幅和钳位以及对电源电压的稳压等多种功能 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分类以及简单介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BA%8C%E6%9E%81%E7%AE%A1%E5%88%86%E7%B1%BB.png&#34;
	width=&#34;1270&#34;
	height=&#34;641&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BA%8C%E6%9E%81%E7%AE%A1%E5%88%86%E7%B1%BB_hu2490964502635959609.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E4%BA%8C%E6%9E%81%E7%AE%A1%E5%88%86%E7%B1%BB_hu13371694065973595512.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;二极管分类.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;198&#34;
		data-flex-basis=&#34;475px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;外观（判断正负极）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;对于直插式发光二极管：长脚为正极，内部小块为正极。&lt;/li&gt;
&lt;li&gt;一般封装类型的正负极判断&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%879.png&#34;
	width=&#34;1204&#34;
	height=&#34;318&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%879_hu17491268375392457710.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%879_hu8469397338006489879.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;378&#34;
		data-flex-basis=&#34;908px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;125-三极管&#34;&gt;&lt;a href=&#34;#125-%e4%b8%89%e6%9e%81%e7%ae%a1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.5 三极管
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;分类：NPN（控地） 和 PNP（控电源）&lt;/li&gt;
&lt;li&gt;工作状态&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;截止状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;发射结反偏，集电结反偏。即：I ce=0&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;放大状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;发射结正偏，集电结反偏。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;饱和状态&lt;/p&gt;
&lt;p&gt;发射结正偏，集电结正偏&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;常见封装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8710.png&#34;
	width=&#34;660&#34;
	height=&#34;856&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8710_hu4738685667943537617.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8710_hu13059161516902504884.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;185px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;126-场效应管尚未掌握&#34;&gt;&lt;a href=&#34;#126-%e5%9c%ba%e6%95%88%e5%ba%94%e7%ae%a1%e5%b0%9a%e6%9c%aa%e6%8e%8c%e6%8f%a1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.6 场效应管（尚未掌握）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;基本介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;场效应晶体管（Field Effect Transistor缩写(FET)）简称场效应管。它是利用控制输入回路的电场效应来控制输出回路电流的一种半导体器件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具有输入电阻高、噪声小、功耗低、动态范围大、易于集成、没有二次击穿现象、安全工作区域宽等优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类型&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;结型场效应管（junction FET—JFET)&lt;/li&gt;
&lt;li&gt;金属 - 氧化物半导体场效应管（metal-oxide semiconductor FET，简称MOS-FET）&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;与三极管的对比&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8711.png&#34;
	width=&#34;640&#34;
	height=&#34;263&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8711_hu8968481966612477841.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8711_hu12658031835349600196.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;243&#34;
		data-flex-basis=&#34;584px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/MOS.png&#34;
	width=&#34;1085&#34;
	height=&#34;336&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/MOS_hu8194000924490727192.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/MOS_hu6654305379383910524.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;322&#34;
		data-flex-basis=&#34;775px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8712.png&#34;
	width=&#34;1288&#34;
	height=&#34;541&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8712_hu437792066898597601.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8712_hu9111432860874598240.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;238&#34;
		data-flex-basis=&#34;571px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8713.png&#34;
	width=&#34;1982&#34;
	height=&#34;529&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8713_hu4857271370956506442.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8713_hu16219221471943648004.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;374&#34;
		data-flex-basis=&#34;899px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;127-芯片--ic&#34;&gt;&lt;a href=&#34;#127-%e8%8a%af%e7%89%87--ic&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.2.7 芯片 / IC
&lt;/h3&gt;&lt;p&gt;具体见数据手册&lt;/p&gt;
&lt;h2 id=&#34;13-数据手册&#34;&gt;&lt;a href=&#34;#13-%e6%95%b0%e6%8d%ae%e6%89%8b%e5%86%8c&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.3 数据手册
&lt;/h2&gt;&lt;p&gt;自己找去&lt;/p&gt;
&lt;h2 id=&#34;14-电路原理图设计&#34;&gt;&lt;a href=&#34;#14-%e7%94%b5%e8%b7%af%e5%8e%9f%e7%90%86%e5%9b%be%e8%ae%be%e8%ae%a1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1.4 电路原理图设计
&lt;/h2&gt;&lt;h3 id=&#34;网络标签&#34;&gt;&lt;a href=&#34;#%e7%bd%91%e7%bb%9c%e6%a0%87%e7%ad%be&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;网络标签
&lt;/h3&gt;&lt;p&gt;网络标签 (Net Label)：网络标号表示一个电器连接点，具有相同网络标号的器件表明是电气连接在一起。&lt;/p&gt;
&lt;h3 id=&#34;模块化&#34;&gt;&lt;a href=&#34;#%e6%a8%a1%e5%9d%97%e5%8c%96&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;模块化
&lt;/h3&gt;&lt;h3 id=&#34;注释&#34;&gt;&lt;a href=&#34;#%e6%b3%a8%e9%87%8a&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;注释
&lt;/h3&gt;&lt;h3 id=&#34;总结&#34;&gt;&lt;a href=&#34;#%e6%80%bb%e7%bb%93&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;总结：
&lt;/h3&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;分模块、分图页&lt;/li&gt;
&lt;li&gt;标注重要参数&lt;/li&gt;
&lt;li&gt;标注元件特殊/重要功能&lt;/li&gt;
&lt;li&gt;标注注意事项&lt;/li&gt;
&lt;li&gt;合理的网络标签&lt;/li&gt;
&lt;li&gt;标注LOGO/版本号&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;==&lt;strong&gt;成功的原理图设计=合理的元件选型+正确的电路设计&lt;/strong&gt;==&lt;/p&gt;
&lt;h2 id=&#34;2-pcb设计&#34;&gt;&lt;a href=&#34;#2-pcb%e8%ae%be%e8%ae%a1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2. PCB设计
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;PCB基本介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;PCB板就是印制电路板，又称印刷电路板，是电子元器件电气连接的提供者。PCB根据其基板材料的不同而不同，高频微波板、金属基板，铝基板、铁基板、铜基板、双面板及多层板PCB是英文Printed Circuit Board的缩写，中文名称为印制电路板，又称印刷电路板、印刷线路板，是重要的电子部件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;21pcb-组成&#34;&gt;&lt;a href=&#34;#21pcb-%e7%bb%84%e6%88%90&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1PCB 组成
&lt;/h3&gt;&lt;h4 id=&#34;211铺铜&#34;&gt;&lt;a href=&#34;#211%e9%93%ba%e9%93%9c&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1.1铺铜
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;作用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将PCB上闲置的空间作为基准面，然后用固体铜填充，这些铜区又称为灌铜。覆铜的意义在于，减小地线阻抗，提高抗干扰能力；降低压降，提高电源效率；与地线相连，还可以减小环路面积。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;大面积覆铜&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大面积覆铜，具备了加大电流和屏蔽双重作用，但是大面积覆铜，如果过波峰焊时，板子就可能会翘起来，甚至会起泡。因此大面积覆铜，一般也会开几个槽，缓解铜箔起泡。低频电路、有大电流的电路等常用大面积的覆铜。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网格覆铜&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从散热的角度说，它降低了铜的受热面，又起到了一定的电磁屏蔽的作用。因此，高频电路对抗干扰要求高的多用网格覆铜&lt;/p&gt;
&lt;h4 id=&#34;212过孔&#34;&gt;&lt;a href=&#34;#212%e8%bf%87%e5%ad%94&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1.2过孔
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;功能&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;电气连接：过孔用于将不同层面的电路连接起来，使得电路板能够在不同的层次上进行有效的信号和电源传输。&lt;/li&gt;
&lt;li&gt;器件固定或定位：过孔还可以用作固定电子部件的位置，如电阻、电容等，确保其在电路板上的正确布局。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;分类&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;通孔：从PCB的上层钻到底层的机械钻孔。&lt;/li&gt;
&lt;li&gt;盲孔：从 PCB 的上层或底层到内层钻孔和电镀的孔。&lt;/li&gt;
&lt;li&gt;埋孔：指位于印刷线路板内层的连接孔，它不会延伸到线路板的表面。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;213焊盘&#34;&gt;&lt;a href=&#34;#213%e7%84%8a%e7%9b%98&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1.3焊盘
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;定义：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;元件通过PCB上的引线孔，用焊锡焊接固定在PCB上，印制导线把焊盘连接起来，实现元件在电路中的电气连接。引线孔及周围的铜箔称为焊盘。&lt;/p&gt;
&lt;h4 id=&#34;214丝印&#34;&gt;&lt;a href=&#34;#214%e4%b8%9d%e5%8d%b0&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1.4丝印
&lt;/h4&gt;&lt;p&gt;PCB丝印是指在电子线路板（Printed Circuit Board）上印刷的信息，如文字、标志、图形等。这些丝印具有重要的功能，它们可以帮助标识电子元件的位置、数值、型号等信息，以及元件的方向和正确的安装方式。&lt;/p&gt;
&lt;h4 id=&#34;215阻焊&#34;&gt;&lt;a href=&#34;#215%e9%98%bb%e7%84%8a&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.1.5阻焊
&lt;/h4&gt;&lt;p&gt;在铜层上面覆盖油墨层，油墨层覆盖住铜层上面不需要焊接的线路，防止PCB上的线路和其他的金属、焊锡或者其它的导电物体接触导致短路，起到绝缘及保护铜层作用，选择性露出焊接需要的铜PAD、IC等。&lt;/p&gt;
&lt;h3 id=&#34;22pcb结构&#34;&gt;&lt;a href=&#34;#22pcb%e7%bb%93%e6%9e%84&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.2PCB结构
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;叠层结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PCB材料的组成主要有PP半固态片和Core芯板两部分组成，这就构成了所看到的绿色、红色或者黑色等的板子，再加上敷铜线路层，器件，就构成了电路板。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;==叠层结构布局有讲究==，但是一般的二层板双面都可能需要走底地线和电源。&lt;/li&gt;
&lt;li&gt;图示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8714.png&#34;
	width=&#34;1238&#34;
	height=&#34;657&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8714_hu1771015543044786340.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8714_hu3748948775054596771.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图片14.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;23-pcb设计流程&#34;&gt;&lt;a href=&#34;#23-pcb%e8%ae%be%e8%ae%a1%e6%b5%81%e7%a8%8b&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.3 PCB设计流程
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8715.png&#34;
	width=&#34;631&#34;
	height=&#34;683&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8715_hu7359480896298707448.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/%E5%9B%BE%E7%89%8715_hu8167649226820923960.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;92&#34;
		data-flex-basis=&#34;221px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;&lt;a href=&#34;#heading&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;
&lt;/h3&gt;&lt;h3 id=&#34;2end1pcb设计规则总览持续添加ing&#34;&gt;&lt;a href=&#34;#2end1pcb%e8%ae%be%e8%ae%a1%e8%a7%84%e5%88%99%e6%80%bb%e8%a7%88%e6%8c%81%e7%bb%ad%e6%b7%bb%e5%8a%a0ing&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2.end.1PCB设计规则总览（持续添加ing）
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;电路布局与元器件安放&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电路布局是否合理？&lt;/li&gt;
&lt;li&gt;元器件之间的距离是否足够？&lt;/li&gt;
&lt;li&gt;元器件的放置方向是否一致？&lt;/li&gt;
&lt;li&gt;是否合理安排了元器件的布局顺序？&lt;/li&gt;
&lt;li&gt;是否考虑了元器件的封装形式和选择？&lt;/li&gt;
&lt;li&gt;是否进行了元器件的标注和排列规范？&lt;/li&gt;
&lt;li&gt;是否考虑了元器件的插拔次数和位置？&lt;/li&gt;
&lt;li&gt;是否进行了元器件的冗余设计？&lt;/li&gt;
&lt;li&gt;是否考虑了元器件的热管理和散热问题？&lt;/li&gt;
&lt;li&gt;是否进行了元器件的可靠性分析？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;信号管理：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;线宽与过孔&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1）8/8mil，过孔选择12mil（0.3mm）。
2）6/6mil，过孔选择12mil（0.3mm）。
3）4/4mil，过孔选择8mil（0.2mm）。
4）3.5/3.5mil，过孔选择8mil（0.2mm）。
5）3.5/3.5mil，过孔选择4mil（0.1mm，激光打孔）。
6）2/2mil，过孔选择4mil（0.1mm，激光打孔）。
参考过孔：内径12mil、外径20mil
参考内径20mil、外径30mil&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了信号完整性分析？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了阻抗匹配设计？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了信号线路的优化布局和仿真验证？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否考虑了电磁干扰和射频干扰的影响？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了电磁场模拟分析？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否考虑了信号传输速率和衰减问题？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否考虑了线路的阻抗匹配和信号损耗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了线路的阻抗匹配设计？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;电源管理：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;电流与布线宽度&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;电源线、地线的宽度最好尽可能宽，地线比电源线宽。这些关系为：地线&amp;gt;电源线&amp;gt;信号线，通常信号线的宽度为0.2-0.3mm(8-12mil)，最细的宽度为0.05-0.07mm(2-2.8mil)，电源线为1.2-2.5mm(48-100mil)。(0.025mm=1mil).&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://eda365.com/article-12-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PCB走线载流计算器-EDA365电子论坛通信数码-人工智能-计算机-半导体-手机家电消费电子硬件门户网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/1.png&#34;
	width=&#34;970&#34;
	height=&#34;879&#34;
	srcset=&#34;http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/1_hu14476683659147836310.png 480w, http://localhost:1313/p/pcb%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AB%8B%E5%88%9Beda%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/1_hu9036526061882384709.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;110&#34;
		data-flex-basis=&#34;264px&#34;
	
&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否考虑了电源的滤波和稳压？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了电源线和地线的分离和规范设计？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否考虑了过压和过流保护的设计？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;是否进行了电源供应的充足性和稳定性分析？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PCB工艺与环境因素：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否考虑了PCB的工作环境和应用场景&lt;/li&gt;
&lt;li&gt;是否进行了PCB的加工工艺和成本分析？&lt;/li&gt;
&lt;li&gt;是否进行了PCB布线的仿真验证？&lt;/li&gt;
&lt;li&gt;是否考虑了PCB的防火、加固、环境友好等设计因素？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;仅供参考，可能有误&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>物联网协议基础</title>
        <link>http://localhost:1313/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/</guid>
        <description>&lt;img src="http://localhost:1313/p/%E7%89%A9%E8%81%94%E7%BD%91%E5%8D%8F%E8%AE%AE%E5%9F%BA%E7%A1%80/background.jpg" alt="Featured image of post 物联网协议基础" /&gt;&lt;h2 id=&#34;mqtt消息队列遥测传输协议&#34;&gt;&lt;a href=&#34;#mqtt%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e9%81%a5%e6%b5%8b%e4%bc%a0%e8%be%93%e5%8d%8f%e8%ae%ae&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;MQTT（消息队列遥测传输协议）
&lt;/h2&gt;&lt;p&gt;MQTT是轻量级的消息发布/订阅协议，设计用于资源受限的设备和低带宽、高延迟的网络环境。它已成为物联网领域的事实标准，广泛应用于智能家居、工业自动化等领域。&lt;/p&gt;
&lt;p&gt;mqtt比较简单，算是我入门物联网使用的第一种方式（协议）。从搭建mqtt服务器，协议原理，连接方式以及mqtt上位机编写，通过实操都有了一定了解了。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/02/09/MQTT%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%90%ad%e5%bb%ba%ef%bc%88mosquitto%ef%bc%89/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MQTT服务器搭建（mosquitto） | Regen (regenm.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/02/09/esp8266%e8%bf%9e%e6%8e%a5%e6%9c%8d%e5%8a%a1%e5%99%a8%ef%bc%88%e5%9f%ba%e4%ba%8emosquitto%e7%9a%84mqtt-server%ef%bc%89/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;esp8266连接服务器（基于mosquitto的mqtt server） | Regen (regenm.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/04/27/mqttSender/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mqttSender | Regen (regenm.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;coap受限应用协议&#34;&gt;&lt;a href=&#34;#coap%e5%8f%97%e9%99%90%e5%ba%94%e7%94%a8%e5%8d%8f%e8%ae%ae&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;CoAP（受限应用协议）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Coap（Constrained Application Protocol）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用在资源受限的物联网设备上，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coap协议特点&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;COAP协议网络传输层由TCP改为UDP。&lt;/li&gt;
&lt;li&gt;它基于REST，server的资源地址和互联网一样也有类似url的格式，客户端同样有POST，GET,PUT,DELETE方法来访问server，HTTP做了简化。&lt;/li&gt;
&lt;li&gt;COAP是二进制格式的，HTTP是文本格式的，COAP比HTTP更加紧凑。&lt;/li&gt;
&lt;li&gt;轻量化，COAP最小长度仅仅4B，一个HTTP的头都几十个B了。&lt;/li&gt;
&lt;li&gt;支持可靠传输，数据重传，块传输。确保数据可靠到达。&lt;/li&gt;
&lt;li&gt;支持IP多播，即可以同时向多个设备发送请求。&lt;/li&gt;
&lt;li&gt;非长连接通信，适用于低功耗物联网场景&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;CoAP是为物联网设备设计的轻量级协议，基于REST架构，与HTTP类似，但更加节能和高效，适用于低功耗、受限网络的物联网设备。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;lorawan&#34;&gt;&lt;a href=&#34;#lorawan&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;LoRaWAN
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;lora和lorawan的区别&#34;&gt;&lt;a href=&#34;#lora%e5%92%8clorawan%e7%9a%84%e5%8c%ba%e5%88%ab&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;LoRa和LoRaWAN的区别
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;LoRa&lt;/strong&gt;：LoRa是一种物理层的调制技术，用于在设备之间传输无线电信号。它能够在不消耗大量电力的情况下，实现设备之间的长距离数据传输。LoRa的通信通常是点对点的，或者在某些场景下是点对多点的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LoRaWAN&lt;/strong&gt;：LoRaWAN是LoRa的网络层协议，用于管理LoRa设备如何在广域网中进行通信。它定义了设备如何与集中式网络服务器（通常通过网关）通信，从而实现设备数据的收集和处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;1-lora&#34;&gt;&lt;a href=&#34;#1-lora&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1. &lt;strong&gt;LoRa&lt;/strong&gt;：
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：LoRa（Long Range）是一种调制技术，用于无线数据传输。它属于物理层（PHY），负责将数据编码成无线电信号，以便设备在长距离内进行低功耗通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;：LoRa技术的主要优势是支持低功耗、长距离的通信，通常可以在几公里到几十公里的范围内工作，具体取决于环境和地理条件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：LoRa用于设备之间的直接无线通信，它不涉及设备如何联网或管理通信的高级功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-lorawan&#34;&gt;&lt;a href=&#34;#2-lorawan&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2. &lt;strong&gt;LoRaWAN&lt;/strong&gt;：
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;定义&lt;/strong&gt;：LoRaWAN（LoRa Wide Area Network）是基于LoRa技术的网络层协议，定义了设备如何在广域网中进行通信。它包括了数据传输的管理、设备与网络的互联，以及如何实现数据的加密、认证等高级功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;作用&lt;/strong&gt;：LoRaWAN管理LoRa设备与网关、服务器之间的通信，确保数据能够从设备安全地传输到网络服务器，并从服务器发送指令到设备。它定义了星型拓扑结构、设备的通信模式、数据传输的时间窗口等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用途&lt;/strong&gt;：LoRaWAN使得LoRa设备能够连接到互联网，实现大规模物联网应用中的设备管理和数据处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;LoRaWAN协议用于LoRa设备之间的通信，支持长距离、低功耗的无线通信。它在智能城市、农业监控和远程传感应用中得到广泛采用。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ipv6和6lowpan&#34;&gt;&lt;a href=&#34;#ipv6%e5%92%8c6lowpan&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;IPv6和6LoWPAN
&lt;/h2&gt;&lt;p&gt;IPv6的普及为每个物联网设备提供了一个唯一的IP地址，解决了地址匮乏问题。6LoWPAN（IPv6 over Low-Power Wireless Personal Area Networks）使得IPv6能够在低功耗、低速率的无线网络中使用，支持大规模物联网部署。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;thread&#34;&gt;&lt;a href=&#34;#thread&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;&lt;strong&gt;Thread&lt;/strong&gt;：
&lt;/h2&gt;&lt;p&gt;Thread是一种为智能家居和建筑自动化设计的低功耗无线协议，基于IPv6，提供了更好的安全性、可靠性和可扩展性。它兼容现有的IP网络，并支持数百个设备的互联。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;zigbee&#34;&gt;&lt;a href=&#34;#zigbee&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Zigbee
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：低功耗、短距离、基于IEEE 802.15.4标准的无线网络协议。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于家庭自动化、楼宇控制、传感器网络等应用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：低功耗，支持网状网络（Mesh Network），具有较强的自愈能力和扩展性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;z-wave&#34;&gt;&lt;a href=&#34;#z-wave&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Z-Wave
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：低功耗、短距离、专为智能家居设计的无线通信协议。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：广泛应用于家庭自动化系统，如灯光控制、门锁、安全系统。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：低功耗，良好的互操作性，支持家庭网络的点对点通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;bluetooth-low-energyble&#34;&gt;&lt;a href=&#34;#bluetooth-low-energyble&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Bluetooth Low Energy（BLE）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：低功耗、短距离、蓝牙4.0及以上版本的特性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于短距离、低功耗的设备，如可穿戴设备、医疗设备、智能家居。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：低功耗，广泛支持，适合需要定期传输小数据量的设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;nb-iotnarrowband-iot&#34;&gt;&lt;a href=&#34;#nb-iotnarrowband-iot&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;NB-IoT（Narrowband IoT）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：低功耗广域网技术，基于蜂窝网络。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于广域覆盖和低数据速率的物联网应用，如智能计量、资产追踪、智慧城市。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：深度覆盖，支持海量设备连接，电池寿命长。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;sigfox&#34;&gt;&lt;a href=&#34;#sigfox&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Sigfox
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：超窄带、低功耗广域网技术。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于低数据传输速率和低功耗的应用，如资产跟踪、环境监测、智能城市。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：全球覆盖，超低功耗，成本低，适合大规模部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;6lowpanipv6-over-low-power-wireless-personal-area-networks&#34;&gt;&lt;a href=&#34;#6lowpanipv6-over-low-power-wireless-personal-area-networks&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;6LoWPAN（IPv6 over Low-Power Wireless Personal Area Networks）
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：将IPv6引入低功耗无线网络，适用于资源受限的设备。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于需要与互联网通信的物联网设备，如智能家居、工业自动化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：支持IP地址的直接分配，便于与现有互联网基础设施集成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;wi-fi&#34;&gt;&lt;a href=&#34;#wi-fi&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Wi-Fi
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：基于IEEE 802.11标准，提供高速、短距离无线通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于需要高带宽、连续供电的物联网设备，如智能摄像头、家庭自动化设备。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：高速数据传输，广泛应用，易于部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://regenm.github.io/2024/08/25/%e7%89%a9%e8%81%94%e7%bd%91%e5%8d%8f%e8%ae%ae%e6%89%ab%e7%9b%b2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;to be continued&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cellular-lte-m-nb-iot-5g&#34;&gt;&lt;a href=&#34;#cellular-lte-m-nb-iot-5g&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;Cellular (LTE-M, NB-IoT, 5G)
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;特点&lt;/strong&gt;：基于蜂窝网络的物联网通信协议，提供广域覆盖和高带宽。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：适用于需要广域覆盖和高可靠性的应用，如车联网、远程监控、物流追踪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;优点&lt;/strong&gt;：广域覆盖，支持移动性，高带宽，适合大规模物联网部署。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;仅供参考，可能有误&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>c&#43;&#43;基础</title>
        <link>http://localhost:1313/p/c-%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/c-%E5%9F%BA%E7%A1%80/</guid>
        <description>&lt;img src="http://localhost:1313/p/c-%E5%9F%BA%E7%A1%80/stl.png" alt="Featured image of post c&#43;&#43;基础" /&gt;&lt;h2 id=&#34;c基础题目1&#34;&gt;&lt;a href=&#34;#c%e5%9f%ba%e7%a1%80%e9%a2%98%e7%9b%ae1&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;c++基础题目（1）
&lt;/h2&gt;&lt;h3 id=&#34;题目列表&#34;&gt;&lt;a href=&#34;#%e9%a2%98%e7%9b%ae%e5%88%97%e8%a1%a8&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;题目列表
&lt;/h3&gt;&lt;h4 id=&#34;1-以下说法中正确的是-&#34;&gt;&lt;a href=&#34;#1-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;1. 以下说法中正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 基类的私有成员在派生类的对象中不可访问，也不占内存空间&lt;/li&gt;
&lt;li&gt;B. 封装性指的是将不同类型的相关数据组合在一起，作为一个整体进行处理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 在面向对象的程序设计中，结构化程序设计方法仍有着重要作用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 多态性指的是对象的状态会根据运行时要求自动变化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。基类的私有成员在派生类中不可访问，但仍然占用内存空间。&lt;/li&gt;
&lt;li&gt;B. 错误。封装性指的是将数据和操作数据的方法绑定在一起，形成一个独立的单位。&lt;/li&gt;
&lt;li&gt;D. 错误。多态性指的是同一接口可以有不同的实现形式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-执行以下程序后输出的结果是-&#34;&gt;&lt;a href=&#34;#2-%e6%89%a7%e8%a1%8c%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e5%90%8e%e8%be%93%e5%87%ba%e7%9a%84%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;2. 执行以下程序后，输出的结果是（ ）。
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：D&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 1.25&lt;/li&gt;
&lt;li&gt;B. 0&lt;/li&gt;
&lt;li&gt;C. 1.3&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D. 1&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;b/a&lt;/code&gt; 是整数除法，结果为1，再转换为浮点数仍然是1.0。&lt;/li&gt;
&lt;li&gt;B. 错误。整数除法的结果不可能是0。&lt;/li&gt;
&lt;li&gt;C. 错误。&lt;code&gt;b/a&lt;/code&gt; 的结果为1，而不是1.3。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-以下描述不正确的是-&#34;&gt;&lt;a href=&#34;#3-%e4%bb%a5%e4%b8%8b%e6%8f%8f%e8%bf%b0%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;3. 以下描述不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. break语句在一层循环体中可出现多次&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. break语句可用在if语句中，它可使执行的流程跳出当前的if语句&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. break语句可用在循环体中，它将是执行的流程跳出本层循环&lt;/li&gt;
&lt;li&gt;D. break语句可用在switch语句中，它使执行的流程跳出当前switch语句&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;B. 错误。&lt;code&gt;break&lt;/code&gt; 语句不能用于跳出 &lt;code&gt;if&lt;/code&gt; 语句，只能用于跳出循环或 &lt;code&gt;switch&lt;/code&gt; 语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4-以下描述不正确的是-&#34;&gt;&lt;a href=&#34;#4-%e4%bb%a5%e4%b8%8b%e6%8f%8f%e8%bf%b0%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;4. 以下描述不正确的是（ ）。**
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 相同类型的指针之间可以相互赋值&lt;/li&gt;
&lt;li&gt;B. 指针中存放的实际上是内存单元的地址&lt;/li&gt;
&lt;li&gt;C. 可以在指针定义的同时对其进行初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。相同类型的指针之间可以相互赋值，但不同类型的指针之间不能直接赋值，需要进行类型转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5-以下说法中正确的是-&#34;&gt;&lt;a href=&#34;#5-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;5. 以下说法中正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 当动态分配内存失败时，系统会立刻崩溃，因此一定要慎用new&lt;/li&gt;
&lt;li&gt;B. C++语言只能用new和delete用于动态内存分配和释放的函数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 动态分配的内存空间也可以被初始化&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 当系统内存不够时，会自动回收不再使用的内存单元，因此程序中不必用delete释放内存空间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。动态分配内存失败时，&lt;code&gt;new&lt;/code&gt; 会抛出异常或返回 &lt;code&gt;nullptr&lt;/code&gt;，但不会导致系统崩溃。&lt;/li&gt;
&lt;li&gt;B. 错误。C++ 中除了 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt;，还可以使用 &lt;code&gt;malloc&lt;/code&gt; 和 &lt;code&gt;free&lt;/code&gt; 进行动态内存管理。&lt;/li&gt;
&lt;li&gt;D. 错误。C++ 不提供自动垃圾回收机制，必须手动释放内存。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#6-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;6. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 构造函数可以对静态数据成员进行初始化&lt;/li&gt;
&lt;li&gt;B. 构造函数可以重载&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 构造函数不可以设置默认参数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 构造函数可以在说明类变量时自动执行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;C. 错误。构造函数可以设置默认参数，这样在创建对象时可以&lt;strong&gt;省略部分参数&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;7-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#7-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;7. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. 公有继承时基类中的private成员在派生类中仍是private的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. 保护继承时基类中的public成员在派生类中是protected的&lt;/li&gt;
&lt;li&gt;C. 公有继承时基类中的public成员在派生类中仍是public的&lt;/li&gt;
&lt;li&gt;D. 私有继承时基类中的public成员在派生类中是private的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。公有继承时，基类中的 &lt;code&gt;private&lt;/code&gt; 成员&lt;strong&gt;在派生类中不可访问&lt;/strong&gt;，而不是保持 &lt;code&gt;private&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;8-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#8-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;8. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 如果类A是类B的友元，那么类A的所有成员函数都是类B的友元&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 如果类A是类B的友元，那么类B也是类A的友元&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 如果函数fun()被说明为类A的友元，那么在fun()中可以访问类A的私有成员&lt;/li&gt;
&lt;li&gt;D. 友元关系不能被继承&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;B. 错误。友元关系是单向的，类A是类B的友元，并不意味着类B也是类A的友元。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;9-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#9-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;9. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 7&lt;/li&gt;
&lt;li&gt;B. 5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;b++&lt;/code&gt; 后 &lt;code&gt;a&lt;/code&gt; 的值变为6，&lt;code&gt;(*pa)++&lt;/code&gt; 输出6，然后 &lt;code&gt;a&lt;/code&gt; 的值变为7。&lt;/li&gt;
&lt;li&gt;B. 错误。&lt;code&gt;b++&lt;/code&gt; 后 &lt;code&gt;a&lt;/code&gt; 的值变为6，&lt;code&gt;(*pa)++&lt;/code&gt; 输出6。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;b++&lt;/code&gt; 后 &lt;code&gt;a&lt;/code&gt; 的值变为6，&lt;code&gt;(*pa)++&lt;/code&gt; 输出6，然后 &lt;code&gt;a&lt;/code&gt; 的值变为7。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;10-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#10-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;10. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;142&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：D&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 100,100&lt;/li&gt;
&lt;li&gt;B. 100,142&lt;/li&gt;
&lt;li&gt;C. 142,100&lt;/li&gt;
&lt;li&gt;D. 142,142&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a[0]&lt;/code&gt;变成&lt;code&gt;a[1]&lt;/code&gt;，a[1]不变。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;11-有如下说明-int-a1012345678910pa-则数值为9的表达式是-&#34;&gt;&lt;a href=&#34;#11-%e6%9c%89%e5%a6%82%e4%b8%8b%e8%af%b4%e6%98%8e-int-a1012345678910pa-%e5%88%99%e6%95%b0%e5%80%bc%e4%b8%ba9%e7%9a%84%e8%a1%a8%e8%be%be%e5%bc%8f%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;11. 有如下说明： &lt;code&gt;int a[10]={1,2,3,4,5,6,7,8,9,10},*p=a;&lt;/code&gt; 则数值为9的表达式是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. *p+=9&lt;/li&gt;
&lt;li&gt;B. p+8&lt;/li&gt;
&lt;li&gt;*&lt;em&gt;C. &lt;em&gt;(p+8)&lt;/em&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;D. *p+9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;*p+=9&lt;/code&gt; 会使 &lt;code&gt;p&lt;/code&gt; 指向的值增加9，结果为10。&lt;/li&gt;
&lt;li&gt;B. 错误。&lt;code&gt;p+8&lt;/code&gt; 返回指针，而不是值。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;*p+9&lt;/code&gt; 会使 &lt;code&gt;p&lt;/code&gt; 指向的值加9，结果为10。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;12-下列语句中正确的是-&#34;&gt;&lt;a href=&#34;#12-%e4%b8%8b%e5%88%97%e8%af%ad%e5%8f%a5%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;12. 下列语句中，正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. char Str=&amp;ldquo;Anhui-hefei&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;*&lt;em&gt;B. char &lt;em&gt;Str=&amp;ldquo;Anhui-hefei&amp;rdquo;;&lt;/em&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;C. char Str[10]=&amp;ldquo;Anhui-hefei&amp;rdquo;;&lt;/li&gt;
&lt;li&gt;D. char Str[11]=&amp;ldquo;Anhui-hefei&amp;rdquo;;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;char Str=&amp;quot;Anhui-hefei&amp;quot;;&lt;/code&gt; 应该使用字符数组或指针。&lt;/li&gt;
&lt;li&gt;C. 错误。&lt;code&gt;char Str[10]=&amp;quot;Anhui-hefei&amp;quot;;&lt;/code&gt; 字符串长度超过数组长度。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;char Str[11]=&amp;quot;Anhui-hefei&amp;quot;;&lt;/code&gt; 字符串长度超过数组长度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;13-以下说法中正确的是-&#34;&gt;&lt;a href=&#34;#13-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;13. 以下说法中正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 从流中获取数据的操作称为插入操作，向流中添加数据的操作称为提取操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 与键盘、屏幕、打印机和通信端口的交互都可以通过流类来实现&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 输出流有一个名为open的成员函数，其作用是生成一个新的流对象&lt;/li&gt;
&lt;li&gt;D. cin是一个预定义的输入流类&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。从流中获取数据的操作称为提取操作，向流中添加数据的操作称为插入操作。&lt;/li&gt;
&lt;li&gt;C. 错误。&lt;code&gt;open&lt;/code&gt; 是文件流的成员函数，用于打开文件。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;cin&lt;/code&gt; 是预定义的输入流对象，而不是类。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;14-执行语句序列-int-n-cinn-switchn--case-1-case-2cout5-case-3-case-4cout6break-defaultcout7--时若键盘输入1则输出结果是-&#34;&gt;&lt;a href=&#34;#14-%e6%89%a7%e8%a1%8c%e8%af%ad%e5%8f%a5%e5%ba%8f%e5%88%97-int-n-cinn-switchn--case-1-case-2cout5-case-3-case-4cout6break-defaultcout7--%e6%97%b6%e8%8b%a5%e9%94%ae%e7%9b%98%e8%be%93%e5%85%a51%e5%88%99%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;14. 执行语句序列 &lt;code&gt;int n; cin&amp;gt;&amp;gt;n; switch(n) { case 1: case 2:cout&amp;lt;&amp;lt;&#39;5&#39;; case 3: case 4:cout&amp;lt;&amp;lt;&#39;6&#39;;break; default:cout&amp;lt;&amp;lt;&#39;7&#39;; }&lt;/code&gt; 时，若键盘输入1，则输出结果是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 5&lt;/li&gt;
&lt;li&gt;B. 6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 56&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 7&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;case 1&lt;/code&gt; 和 &lt;code&gt;case 2&lt;/code&gt; 没有 &lt;code&gt;break&lt;/code&gt;，会继续执行 &lt;code&gt;case 3&lt;/code&gt; 和 &lt;code&gt;case 4&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;B. 错误。&lt;code&gt;case 1&lt;/code&gt; 和 &lt;code&gt;case 2&lt;/code&gt; 没有 &lt;code&gt;break&lt;/code&gt;，会继续执行 &lt;code&gt;case 3&lt;/code&gt; 和 &lt;code&gt;case 4&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;case 1&lt;/code&gt; 和 &lt;code&gt;case 2&lt;/code&gt; 没有 &lt;code&gt;break&lt;/code&gt;，会继续执行 &lt;code&gt;case 3&lt;/code&gt; 和 &lt;code&gt;case 4&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;15-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#15-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;15. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. *****123&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. $$$$$123&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 123$$$$$&lt;/li&gt;
&lt;li&gt;D. 123*****&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;cout.fill(&#39;$&#39;)&lt;/code&gt; 设置填充字符为 &lt;code&gt;$&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;C. 错误。&lt;code&gt;cout.width(8)&lt;/code&gt; 设置输出宽度为8，不足部分用 &lt;code&gt;$&lt;/code&gt; 填充。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;cout.fill(&#39;$&#39;)&lt;/code&gt; 设置填充字符为 &lt;code&gt;$&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;16-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#16-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;16. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 面向对象是从现实世界中客观存在的事物出发来构造软件系统的&lt;/li&gt;
&lt;li&gt;B. 面向对象方法中使用了一些面向过程方法中没有的概念&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 面向对象方法替代了过程化程序设计方法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 面向对象程序设计方法要使用面向对象的程序设计语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;C. 错误。面向对象方法并没有完全替代过程化程序设计方法，两者各有适用场景。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;17-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#17-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;17. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. 使用sizeof运算符可以求得某种类型和某个变量在内存中占的字节数，不能求得某个表达式的类型在内存中所占的字节数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. 没有参数的两个函数是不能重载的&lt;/li&gt;
&lt;li&gt;C. 在C++程序中，变量值是可以改变的，变量的地址值是不能改变的&lt;/li&gt;
&lt;li&gt;D. 开关语句中各个case和default出现的前后次序不影响执行结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;sizeof&lt;/code&gt; 运算符可以用于求得表达式的类型在内存中所占的字节数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;18-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#18-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;18. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 动态联编是函数联编的一种方式，它是在运行时来选择联编函数的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 函数重载和运算符重载都属于动态联编&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 动态联编又可称为动态多态性，是通过虚函数实现的&lt;/li&gt;
&lt;li&gt;D. 抽象类中至少应该有一个纯虚函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;B. 错误。函数重载和运算符重载属于静态联编，而不是动态联编。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;19-已知b类是a类的公有继承的派生类以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#19-%e5%b7%b2%e7%9f%a5b%e7%b1%bb%e6%98%afa%e7%b1%bb%e7%9a%84%e5%85%ac%e6%9c%89%e7%bb%a7%e6%89%bf%e7%9a%84%e6%b4%be%e7%94%9f%e7%b1%bb%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;19. 已知：B类是A类的公有继承的派生类，以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. A类的对象就是B类的对象&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. B类对象可以给A类对象赋值&lt;/li&gt;
&lt;li&gt;C. B类对象的地址值可以给A类对象指针赋值&lt;/li&gt;
&lt;li&gt;D. B类对象可以给A类对象引用赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。A类的对象不是B类的对象，但B类的对象可以被视为A类的对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;20-以下说法中正确的是-&#34;&gt;&lt;a href=&#34;#20-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;20. 以下说法中正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 字符串常量与字符常量的区别仅表现在定义形式上的不同，一个用双撇号，另一个用单撇号&lt;/li&gt;
&lt;li&gt;B. 增1和减1运算符不仅可以作用在变量上，也可以作用在表达式上&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. C++程序中，通常使用const来定义符号常量，定义时必须指出类型&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 关系运算符可以用来比较两个字符的大小，也可以比较两个字符串的大小&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。字符串常量和字符常量不仅在定义形式上不同，它们的类型和用途也不同。&lt;/li&gt;
&lt;li&gt;B. 错误。增1和减1运算符只能作用在变量上，不能作用在表达式上。&lt;/li&gt;
&lt;li&gt;D. 错误。关系运算符可以比较两个字符的大小，但不能直接比较两个字符串的大小，需要使用字符串比较函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;21-已知int-swapint-aint-b-x10-y20-下列调用-swap-函数的语句中编译不会报错的是-&#34;&gt;&lt;a href=&#34;#21-%e5%b7%b2%e7%9f%a5int-swapint-aint-b-x10-y20-%e4%b8%8b%e5%88%97%e8%b0%83%e7%94%a8-swap-%e5%87%bd%e6%95%b0%e7%9a%84%e8%af%ad%e5%8f%a5%e4%b8%ad%e7%bc%96%e8%af%91%e4%b8%8d%e4%bc%9a%e6%8a%a5%e9%94%99%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;21. 已知：&lt;code&gt;int swap(int &amp;amp;a,int &amp;amp;b), x=10, y=20;&lt;/code&gt; 下列调用 &lt;code&gt;swap()&lt;/code&gt; 函数的语句中，编译不会报错的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. swap(&amp;amp;x,&amp;amp;y);&lt;/li&gt;
&lt;li&gt;B. swap(x+2,y+5);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. swap(x,y);&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. swap(x++,++y);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;&amp;amp;x&lt;/code&gt; 和 &lt;code&gt;&amp;amp;y&lt;/code&gt; 是指针，而 &lt;code&gt;swap&lt;/code&gt; 函数需要引用参数。&lt;/li&gt;
&lt;li&gt;B. 错误。&lt;code&gt;x+2&lt;/code&gt; 和 &lt;code&gt;y+5&lt;/code&gt; 是临时表达式，不能作为引用参数。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;x++&lt;/code&gt; 和 &lt;code&gt;++y&lt;/code&gt; 是带有副作用的表达式，不能作为引用参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;22-void-setaa-是类a中一个成员函数的说明其中-aa-的含义是-&#34;&gt;&lt;a href=&#34;#22-void-setaa-%e6%98%af%e7%b1%bba%e4%b8%ad%e4%b8%80%e4%b8%aa%e6%88%90%e5%91%98%e5%87%bd%e6%95%b0%e7%9a%84%e8%af%b4%e6%98%8e%e5%85%b6%e4%b8%ad-aa-%e7%9a%84%e5%90%ab%e4%b9%89%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;22. &lt;code&gt;void Set(A&amp;amp;a);&lt;/code&gt; 是类A中一个成员函数的说明，其中 &lt;code&gt;A&amp;amp;a&lt;/code&gt; 的含义是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. 类A的对象引用a作该函数的参数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. 类A的对象a的地址值作函数的参数&lt;/li&gt;
&lt;li&gt;C. 表达式变量A与变量a按位与作函数参数&lt;/li&gt;
&lt;li&gt;D. 指向类A对象指针a作函数参数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;B. 错误。&lt;code&gt;A&amp;amp;a&lt;/code&gt; 是引用，而不是指针。&lt;/li&gt;
&lt;li&gt;C. 错误。按位与操作与函数参数无关。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;A&amp;amp;a&lt;/code&gt; 是引用，而不是指针。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;23-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#23-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;23. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 运算符重载是通过对已有的运算符重新定义操作功能来实现的，它是C++语言多态性的一种表现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 如果类模板的模板类型参数有多个，除第1个模板类型参数前使用关键字class，其余的模板类型参数前都不使用关键字class&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 虚函数有继承性，基类中说明的虚函数只要在它的派生类中与它名字相同的，一定是虚函数&lt;/li&gt;
&lt;li&gt;D. 一个抽象类中可以包含有多个纯虚函数，一个派生类中也可以包含多个虚函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;B. 错误。类模板的每个模板类型参数前都可以使用 &lt;code&gt;class&lt;/code&gt; 或 &lt;code&gt;typename&lt;/code&gt; 关键字。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;24-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#24-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;24. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define MAX(x,y) (x)&amp;gt;(y)?(x):(y)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;IN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 6&lt;/li&gt;
&lt;li&gt;B. 12&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 8&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 7&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。&lt;code&gt;MAX(a, b)&lt;/code&gt; 返回4，乘以2得8。&lt;/li&gt;
&lt;li&gt;B. 错误。&lt;code&gt;MAX(a, b)&lt;/code&gt; 返回4，乘以2得8。&lt;/li&gt;
&lt;li&gt;D. 错误。&lt;code&gt;MAX(a, b)&lt;/code&gt; 返回4，乘以2得8。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;25-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#25-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;25. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 9 8 7 6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 9 8 7&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 7&lt;/li&gt;
&lt;li&gt;D. 9 8 7 6 5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。当 &lt;code&gt;a&lt;/code&gt; 为5时，&lt;code&gt;break&lt;/code&gt; 退出循环，不输出5。&lt;/li&gt;
&lt;li&gt;C. 错误。输出的是9、8、7。&lt;/li&gt;
&lt;li&gt;D. 错误。当 &lt;code&gt;a&lt;/code&gt; 为5时，&lt;code&gt;break&lt;/code&gt; 退出循环，不输出5。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;26-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#26-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;26. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 定义派生类可用关键字class或struct&lt;/li&gt;
&lt;li&gt;B. 定义派生类时要指出派生类的类名和基类的类名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 定义派生类时一定要给出继承方式，不能默认&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 定义派生类时，类体中给出派生类的成员&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;C. 错误。在定义派生类时，如果未指定继承方式，默认为私有继承（private）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;27-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#27-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;27. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;bhy543kpm345&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. 543345&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. bhykpm&lt;/li&gt;
&lt;li&gt;C. bhy543kpm345&lt;/li&gt;
&lt;li&gt;D. bhy543&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;28-以下说法中正确的是-&#34;&gt;&lt;a href=&#34;#28-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;28. 以下说法中正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 没有返回值的函数不能设置为内联函数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 字符指针是指向字符串的指针，可以用字符串常量给字符指针赋值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 外部类变量与外部静态类变量的作用域是相同的&lt;/li&gt;
&lt;li&gt;D. 定义一个数组没有对它进行初始化，则该数组的元素值都是无意义的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。没有返回值的函数可以设置为内联函数。&lt;/li&gt;
&lt;li&gt;C. 错误。外部类变量和外部静态类变量的作用域不同。&lt;/li&gt;
&lt;li&gt;D. 错误。未初始化的数组元素值是未定义的，但不一定无意义。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;29-以下说法中不正确的是-&#34;&gt;&lt;a href=&#34;#29-%e4%bb%a5%e4%b8%8b%e8%af%b4%e6%b3%95%e4%b8%ad%e4%b8%8d%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;29. 以下说法中不正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 用来给数组进行初始化的初始值表内的数据项的个数必须小于等于数组元素个数&lt;/li&gt;
&lt;li&gt;B. C++程序中，通常使用const来定义符号常量，定义时必须指出类型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 移位运算符在移位操作中，无论左移还是右移，对移出的空位一律补0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 数组某维的大小可以用常量表达式，不可用变量名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;C. 错误。右移运算符在移位操作中，对于有符号数，移出的空位补符号位；对于无符号数，移出的空位补0。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;30-以下程序的输出结果是-&#34;&gt;&lt;a href=&#34;#30-%e4%bb%a5%e4%b8%8b%e7%a8%8b%e5%ba%8f%e7%9a%84%e8%be%93%e5%87%ba%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;30. 以下程序的输出结果是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 9 8 7 6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 9 8 7&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 7&lt;/li&gt;
&lt;li&gt;D. 9 8 7 6 5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;31-下列关于c的说法中正确的是-&#34;&gt;&lt;a href=&#34;#31-%e4%b8%8b%e5%88%97%e5%85%b3%e4%ba%8ec%e7%9a%84%e8%af%b4%e6%b3%95%e4%b8%ad%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;31. 下列关于C++的说法中，正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. C++对于大小写不敏感&lt;/li&gt;
&lt;li&gt;B. C++属于解释性语言&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 任何合法的C语言程序都是合法的C++程序&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. C++支持封装与继承，但是不支持多态&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。C++是大小写敏感的。&lt;/li&gt;
&lt;li&gt;B. 错误。C++是编译型语言。&lt;/li&gt;
&lt;li&gt;D. 错误。C++支持封装、继承和多态。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;32-下列哪项关键词属于c所有但是c语言没有的&#34;&gt;&lt;a href=&#34;#32-%e4%b8%8b%e5%88%97%e5%93%aa%e9%a1%b9%e5%85%b3%e9%94%ae%e8%af%8d%e5%b1%9e%e4%ba%8ec%e6%89%80%e6%9c%89%e4%bd%86%e6%98%afc%e8%af%ad%e8%a8%80%e6%b2%a1%e6%9c%89%e7%9a%84&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;32. 下列哪项关键词属于C++所有但是C语言没有的（）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. extern&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. virtual&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. and&lt;/li&gt;
&lt;li&gt;D. goto&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. &lt;code&gt;extern&lt;/code&gt; 是C和C++都有的关键字。&lt;/li&gt;
&lt;li&gt;C. &lt;code&gt;and&lt;/code&gt; 是C++的别名，C语言中没有。&lt;/li&gt;
&lt;li&gt;D. &lt;code&gt;goto&lt;/code&gt; 是C和C++都有的关键字。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;33-有如下枚举类型的定义下面说法错误的是哪一项-&#34;&gt;&lt;a href=&#34;#33-%e6%9c%89%e5%a6%82%e4%b8%8b%e6%9e%9a%e4%b8%be%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%ae%9a%e4%b9%89%e4%b8%8b%e9%9d%a2%e8%af%b4%e6%b3%95%e9%94%99%e8%af%af%e7%9a%84%e6%98%af%e5%93%aa%e4%b8%80%e9%a1%b9-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;33. 有如下枚举类型的定义，下面说法错误的是哪一项( )。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;fruit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hotdog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;apple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;beef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;orange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. fruit c = hotdog; 则c的值为0&lt;/li&gt;
&lt;li&gt;B. fruit c = apple; 则c的值为4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. fruit c = beef; 则c的值为2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. fruit c = orange; 则c的值为6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C. 错误。&lt;code&gt;beef&lt;/code&gt; 的值应该是5，因为 &lt;code&gt;apple&lt;/code&gt; 被显式赋值为4，&lt;code&gt;beef&lt;/code&gt; 是下一个枚举值，所以是5。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;34-下面所述的四段代码不能够完成遍历二叉树的是哪一项打印二叉树所有节点仅一次-&#34;&gt;&lt;a href=&#34;#34-%e4%b8%8b%e9%9d%a2%e6%89%80%e8%bf%b0%e7%9a%84%e5%9b%9b%e6%ae%b5%e4%bb%a3%e7%a0%81%e4%b8%8d%e8%83%bd%e5%a4%9f%e5%ae%8c%e6%88%90%e9%81%8d%e5%8e%86%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e6%98%af%e5%93%aa%e4%b8%80%e9%a1%b9%e6%89%93%e5%8d%b0%e4%ba%8c%e5%8f%89%e6%a0%91%e6%89%80%e6%9c%89%e8%8a%82%e7%82%b9%e4%bb%85%e4%b8%80%e6%ac%a1-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;34. 下面所述的四段代码，不能够完成遍历二叉树的是哪一项（打印二叉树所有节点仅一次）（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;traversal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;traversal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;traversal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;B.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;traversal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BiTree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;traversal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BiTree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;top&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;D.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;traversal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;BiTree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;queue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BiTree&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;front&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;right&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;front&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B. 错误。这段代码中，&lt;code&gt;s.pop()&lt;/code&gt; 后再使用 &lt;code&gt;s.top()&lt;/code&gt; 会导致未定义行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;35-设计一个队列以链表存储队列的元素假设队首指针为head队尾指针为tail现指针p指向的元素即将入队请写出正确的入队代码&#34;&gt;&lt;a href=&#34;#35-%e8%ae%be%e8%ae%a1%e4%b8%80%e4%b8%aa%e9%98%9f%e5%88%97%e4%bb%a5%e9%93%be%e8%a1%a8%e5%ad%98%e5%82%a8%e9%98%9f%e5%88%97%e7%9a%84%e5%85%83%e7%b4%a0%e5%81%87%e8%ae%be%e9%98%9f%e9%a6%96%e6%8c%87%e9%92%88%e4%b8%bahead%e9%98%9f%e5%b0%be%e6%8c%87%e9%92%88%e4%b8%batail%e7%8e%b0%e6%8c%87%e9%92%88p%e6%8c%87%e5%90%91%e7%9a%84%e5%85%83%e7%b4%a0%e5%8d%b3%e5%b0%86%e5%85%a5%e9%98%9f%e8%af%b7%e5%86%99%e5%87%ba%e6%ad%a3%e7%a1%ae%e7%9a%84%e5%85%a5%e9%98%9f%e4%bb%a3%e7%a0%81&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;35. 设计一个队列，以链表存储队列的元素。假设队首指针为head，队尾指针为tail，现指针p指向的元素即将入队，请写出正确的入队代码？（）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：D&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. head = p, head = head-&amp;gt;next;&lt;/li&gt;
&lt;li&gt;B. p-&amp;gt;next = head-&amp;gt;next, head = p;&lt;/li&gt;
&lt;li&gt;C. tail-&amp;gt;next = p, tail = p;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D. tail-&amp;gt;next = p, p-&amp;gt;next = NULL, tail = p;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;36-若是x为4y为9则xy的结果是-&#34;&gt;&lt;a href=&#34;#36-%e8%8b%a5%e6%98%afx%e4%b8%ba4y%e4%b8%ba9%e5%88%99xy%e7%9a%84%e7%bb%93%e6%9e%9c%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;36. 若是x为4，y为9，则(~x)^y的结果是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 1&lt;/li&gt;
&lt;li&gt;B. 10&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 13&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. -14&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;C. 正确。&lt;code&gt;~4&lt;/code&gt; 的二进制表示为 &lt;code&gt;11111101&lt;/code&gt;（假设8位），&lt;code&gt;9&lt;/code&gt; 的二进制表示为 &lt;code&gt;00001001&lt;/code&gt;，两者异或结果为 &lt;code&gt;11110100&lt;/code&gt;，即十进制的13。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;37-下面关于c函数的说法中错误的选项是-&#34;&gt;&lt;a href=&#34;#37-%e4%b8%8b%e9%9d%a2%e5%85%b3%e4%ba%8ec%e5%87%bd%e6%95%b0%e7%9a%84%e8%af%b4%e6%b3%95%e4%b8%ad%e9%94%99%e8%af%af%e7%9a%84%e9%80%89%e9%a1%b9%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;37. 下面关于C++函数的说法中，错误的选项是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. 函数由函数名称、返回类型、参数、函数体组成，缺一不可&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. 函数声明时参数类型不可省，参数名称不是必要的&lt;/li&gt;
&lt;li&gt;C. 有的函数可能没有return关键字&lt;/li&gt;
&lt;li&gt;D. C++可以在定义函数时，设置默认参数值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;A. 错误。函数可以没有参数，也可以没有返回类型（如void函数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;38-定义了如下所示的test1类和它的子类test2下列选项说法错误的是-&#34;&gt;&lt;a href=&#34;#38-%e5%ae%9a%e4%b9%89%e4%ba%86%e5%a6%82%e4%b8%8b%e6%89%80%e7%a4%ba%e7%9a%84test1%e7%b1%bb%e5%92%8c%e5%ae%83%e7%9a%84%e5%ad%90%e7%b1%bbtest2%e4%b8%8b%e5%88%97%e9%80%89%e9%a1%b9%e8%af%b4%e6%b3%95%e9%94%99%e8%af%af%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;38. 定义了如下所示的test1类和它的子类test2，下列选项说法错误的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;test1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;protected&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grade&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;test2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;test1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fun&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gender&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;language&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grade&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. fun()函数中变量gender可以正常输出&lt;/li&gt;
&lt;li&gt;B. fun()函数中变量language可以正常输出&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. fun()函数中变量name可以正常输出&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. fun()函数中变量grade可以正常输出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C. 错误。&lt;code&gt;name&lt;/code&gt; 是私有成员，无法在派生类中直接访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;39-下列c程序实现了使用迭代器访问并输出数组vec的元素空白处应该补充的代码是-&#34;&gt;&lt;a href=&#34;#39-%e4%b8%8b%e5%88%97c%e7%a8%8b%e5%ba%8f%e5%ae%9e%e7%8e%b0%e4%ba%86%e4%bd%bf%e7%94%a8%e8%bf%ad%e4%bb%a3%e5%99%a8%e8%ae%bf%e9%97%ae%e5%b9%b6%e8%be%93%e5%87%ba%e6%95%b0%e7%bb%84vec%e7%9a%84%e5%85%83%e7%b4%a0%e7%a9%ba%e7%99%bd%e5%a4%84%e5%ba%94%e8%af%a5%e8%a1%a5%e5%85%85%e7%9a%84%e4%bb%a3%e7%a0%81%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;39. 下列C++程序实现了使用迭代器访问并输出数组vec的元素，空白处应该补充的代码是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iterator&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 空白处
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;em&gt;A. std::cout &amp;laquo; &lt;em&gt;v &amp;laquo; std::endl;&lt;/em&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;B. std::cout &amp;laquo; v &amp;laquo; std::endl;&lt;/li&gt;
&lt;li&gt;C. std::cout &amp;laquo; &amp;amp;v &amp;laquo; std::endl;&lt;/li&gt;
&lt;li&gt;D. 其他选项均可以&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 正确。&lt;code&gt;*v&lt;/code&gt; 解引用迭代器，获取元素值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;40-关于下列几行c代码说法正确的是-&#34;&gt;&lt;a href=&#34;#40-%e5%85%b3%e4%ba%8e%e4%b8%8b%e5%88%97%e5%87%a0%e8%a1%8cc%e4%bb%a3%e7%a0%81%e8%af%b4%e6%b3%95%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;40. 关于下列几行C++代码，说法正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：B&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 直接输出c1 + c2的结果是195&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B. 直接输出c3 + c4 的结果是199&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;C. 直接输出c1 + c3 的结果是196&lt;/li&gt;
&lt;li&gt;D. 其他选项说法均错误&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B. 正确。&lt;code&gt;c3&lt;/code&gt; 和 &lt;code&gt;c4&lt;/code&gt; 的ASCII码分别为99和100，相加结果为199。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;41-cstl的核心不包括以下哪个选项-&#34;&gt;&lt;a href=&#34;#41-cstl%e7%9a%84%e6%a0%b8%e5%bf%83%e4%b8%8d%e5%8c%85%e6%8b%ac%e4%bb%a5%e4%b8%8b%e5%93%aa%e4%b8%aa%e9%80%89%e9%a1%b9-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;41. C++STL的核心不包括以下哪个选项（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：C&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. 迭代器&lt;/li&gt;
&lt;li&gt;B. 算法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C. 指针&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;D. 容器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;C. 错误。指针不属于STL的核心部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;42-关于下列c代码的时间复杂度与空间复杂度的说法正确的是-&#34;&gt;&lt;a href=&#34;#42-%e5%85%b3%e4%ba%8e%e4%b8%8b%e5%88%97c%e4%bb%a3%e7%a0%81%e7%9a%84%e6%97%b6%e9%97%b4%e5%a4%8d%e6%9d%82%e5%ba%a6%e4%b8%8e%e7%a9%ba%e9%97%b4%e5%a4%8d%e6%9d%82%e5%ba%a6%e7%9a%84%e8%af%b4%e6%b3%95%e6%ad%a3%e7%a1%ae%e7%9a%84%e6%98%af-&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;42. 关于下列C++代码的时间复杂度与空间复杂度的说法，正确的是（ ）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：A&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;solve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A. 时间复杂度为O(N)，空间复杂度为O(N)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;B. 时间复杂度为O(2N)，空间复杂度为O(N)&lt;/li&gt;
&lt;li&gt;C. 时间复杂度为O(N^2)，空间复杂度为O(N/2)&lt;/li&gt;
&lt;li&gt;D. 时间复杂度为O(logN)，空间复杂度为O(N/2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;易错解释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A. 正确。每个元素最多入栈和出栈一次，时间复杂度为O(N)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;43-下列关于c常用标准库的一些说法错误的是哪一项&#34;&gt;&lt;a href=&#34;#43-%e4%b8%8b%e5%88%97%e5%85%b3%e4%ba%8ec%e5%b8%b8%e7%94%a8%e6%a0%87%e5%87%86%e5%ba%93%e7%9a%84%e4%b8%80%e4%ba%9b%e8%af%b4%e6%b3%95%e9%94%99%e8%af%af%e7%9a%84%e6%98%af%e5%93%aa%e4%b8%80%e9%a1%b9&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;43. 下列关于C++常用标准库的一些说法，错误的是哪一项（）。
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;答案&lt;/strong&gt;：D&lt;/li&gt;
&lt;li&gt;选项
&lt;ul&gt;
&lt;li&gt;A. cout控制输出精度需要使用std::setprecision&lt;/li&gt;
&lt;li&gt;B. 标准错误流cerr属于标准输出流的一部分&lt;/li&gt;
&lt;li&gt;C. 字符串截取函数substr()属于std::string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D. 一个C++工程里不可以有两个或多个命名空间&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;易错解释
&lt;ul&gt;
&lt;li&gt;D. 错误。一个C++工程中可以有多个命名空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;44-假定输入的字符串中只包含字母和号请编写程序将字符串中的前导符全部移到字符串的尾部例如字符串中的内容为abcdg移动后字符串中的内容为abcdg在编写程序时不得使用c语言提供的字符串函数输入的字符串不含空格且字符串长度不大于1000&#34;&gt;&lt;a href=&#34;#44-%e5%81%87%e5%ae%9a%e8%be%93%e5%85%a5%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%ad%e5%8f%aa%e5%8c%85%e5%90%ab%e5%ad%97%e6%af%8d%e5%92%8c%e5%8f%b7%e8%af%b7%e7%bc%96%e5%86%99%e7%a8%8b%e5%ba%8f%e5%b0%86%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%ad%e7%9a%84%e5%89%8d%e5%af%bc%e7%ac%a6%e5%85%a8%e9%83%a8%e7%a7%bb%e5%88%b0%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%9a%84%e5%b0%be%e9%83%a8%e4%be%8b%e5%a6%82%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%ad%e7%9a%84%e5%86%85%e5%ae%b9%e4%b8%baabcdg%e7%a7%bb%e5%8a%a8%e5%90%8e%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%ad%e7%9a%84%e5%86%85%e5%ae%b9%e4%b8%baabcdg%e5%9c%a8%e7%bc%96%e5%86%99%e7%a8%8b%e5%ba%8f%e6%97%b6%e4%b8%8d%e5%be%97%e4%bd%bf%e7%94%a8c%e8%af%ad%e8%a8%80%e6%8f%90%e4%be%9b%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%87%bd%e6%95%b0%e8%be%93%e5%85%a5%e7%9a%84%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%8d%e5%90%ab%e7%a9%ba%e6%a0%bc%e4%b8%94%e5%ad%97%e7%ac%a6%e4%b8%b2%e9%95%bf%e5%ba%a6%e4%b8%8d%e5%a4%a7%e4%ba%8e1000&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;44. 假定输入的字符串中只包含字母和@号，请编写程序，将字符串中的前导@符全部移到字符串的尾部。例如：字符串中的内容为：@@@@ab@CD@G@@@,移动后，字符串中的内容为：ab@CD@G@@@@@@@。在编写程序时，不得使用C++语言提供的字符串函数。（输入的字符串不含空格，且字符串长度不大于1000）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入样例1：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;@@@@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ab&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CD&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;@@@&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出样例1：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ab@CD@G@@@@@@@
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入样例2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc@d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出样例2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;abc@d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;45-编写程序从键盘上输入两个正整数较大的数为m和较小的数为n根据以下公式求p的值并输出m和n为大于0且小于等于30的整数&#34;&gt;&lt;a href=&#34;#45-%e7%bc%96%e5%86%99%e7%a8%8b%e5%ba%8f%e4%bb%8e%e9%94%ae%e7%9b%98%e4%b8%8a%e8%be%93%e5%85%a5%e4%b8%a4%e4%b8%aa%e6%ad%a3%e6%95%b4%e6%95%b0%e8%be%83%e5%a4%a7%e7%9a%84%e6%95%b0%e4%b8%bam%e5%92%8c%e8%be%83%e5%b0%8f%e7%9a%84%e6%95%b0%e4%b8%ban%e6%a0%b9%e6%8d%ae%e4%bb%a5%e4%b8%8b%e5%85%ac%e5%bc%8f%e6%b1%82p%e7%9a%84%e5%80%bc%e5%b9%b6%e8%be%93%e5%87%bam%e5%92%8cn%e4%b8%ba%e5%a4%a7%e4%ba%8e0%e4%b8%94%e5%b0%8f%e4%ba%8e%e7%ad%89%e4%ba%8e30%e7%9a%84%e6%95%b4%e6%95%b0&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;45. 编写程序，从键盘上输入两个正整数，较大的数为m和较小的数为n,根据以下公式求P的值，并输出。(m和n为大于0且小于等于30的整数）
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入样例1：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;12 8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出样例1：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;495
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入样例2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;27 30
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出样例2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4060
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;46-定义了nn的二维数组数组元素整数通过键盘输入请编写程序求出数组周边元素的和值并输出2n100&#34;&gt;&lt;a href=&#34;#46-%e5%ae%9a%e4%b9%89%e4%ba%86nn%e7%9a%84%e4%ba%8c%e7%bb%b4%e6%95%b0%e7%bb%84%e6%95%b0%e7%bb%84%e5%85%83%e7%b4%a0%e6%95%b4%e6%95%b0%e9%80%9a%e8%bf%87%e9%94%ae%e7%9b%98%e8%be%93%e5%85%a5%e8%af%b7%e7%bc%96%e5%86%99%e7%a8%8b%e5%ba%8f%e6%b1%82%e5%87%ba%e6%95%b0%e7%bb%84%e5%91%a8%e8%be%b9%e5%85%83%e7%b4%a0%e7%9a%84%e5%92%8c%e5%80%bc%e5%b9%b6%e8%be%93%e5%87%ba2n100&#34; class=&#34;header-anchor&#34;&gt;&lt;/a&gt;46. 定义了N×N的二维数组，数组元素（整数）通过键盘输入，请编写程序，求出数组周边元素的和值，并输出。（2&amp;lt;=N&amp;lt;=100)
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;答案&lt;/strong&gt;：略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入样例1：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0 1 2 7 9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1 9 7 4 5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2 3 8 3 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4 5 6 8 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5 9 1 4 1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出样例1：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;60
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入样例2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-3 2 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1 2 3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-3 -2 -1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出样例2：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;仅供参考，可能有误&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
